#include <iostream>
#include <vector>
using namespace std;

template <typename T>///definesc tipul de parametru pe care il stocheaza Stack

class Stack {

public:

	int size() const;
	bool isEmpty() const;
	const T& top() const
{if (isEmpty()) throw "Stiva goala\n";
return v.back();}

	void push(const T& ob);
	void pop();
	vector <T> v;
};

    template <typename T> bool Stack<T>::isEmpty() const
                    {return (v.empty());}


    template<typename T> void Stack<T>::push(const T& ob)
                    { v.push_back(ob); }


    template<typename T> void Stack<T>::pop()
        {if (isEmpty()) throw "Stiva goala\n"; v.pop_back();}


int main() {
	Stack <int> st;
	st.push(5);
	st.push(43);
	st.push(67);
	st.push(78);
	st.push(97);
    while (!st.isEmpty())
{ cout << st.top() << "\n";
st.pop();}

	return 0;
}
